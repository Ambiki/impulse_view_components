<button type="button" class="btn btn-primary" data-dialog-trigger-for="dialog-1">Open dialog</button>

<p>
  Indicates that the dialog is active and can be interacted with. When the open attribute is not set, the dialog shouldn't be shown to the user. It is recommended to use the .show() or .showModal() methods to render dialogs, rather than the open attribute. If a dialog is opened using the open attribute, it will be non-modal.
  The native HTML dialog element should be used in creating modal dialogs as it provides usability and accessibility features that must be replicated if using other elements for a similar purpose. Use the appropriate .showModal() or .show() method to render dialogs. If creating a custom dialog implementation, ensure all expected default behaviors are supported and proper labeling recommendations are followed.
  When implementing a dialog, it is important to consider the most appropriate place to set user focus. Explicitly indicating the initial focus placement by use of the autofocus attribute will help ensure initial focus is set to the element deemed the best initial focus placement for any particular dialog. When in doubt, as it may not always be known where initial focus could be set within a dialog, particularly for instances where a dialog's content is dynamically rendered when invoked, then if necessary authors may decide focusing the dialog element itself would provide the best initial focus placement. When using HTMLDialogElement.showModal() to open a dialog, focus is set on the first nested focusable element.
</p>

<p>
  Indicates that the dialog is active and can be interacted with. When the open attribute is not set, the dialog shouldn't be shown to the user. It is recommended to use the .show() or .showModal() methods to render dialogs, rather than the open attribute. If a dialog is opened using the open attribute, it will be non-modal.
  The native HTML dialog element should be used in creating modal dialogs as it provides usability and accessibility features that must be replicated if using other elements for a similar purpose. Use the appropriate .showModal() or .show() method to render dialogs. If creating a custom dialog implementation, ensure all expected default behaviors are supported and proper labeling recommendations are followed.
  When implementing a dialog, it is important to consider the most appropriate place to set user focus. Explicitly indicating the initial focus placement by use of the autofocus attribute will help ensure initial focus is set to the element deemed the best initial focus placement for any particular dialog. When in doubt, as it may not always be known where initial focus could be set within a dialog, particularly for instances where a dialog's content is dynamically rendered when invoked, then if necessary authors may decide focusing the dialog element itself would provide the best initial focus placement. When using HTMLDialogElement.showModal() to open a dialog, focus is set on the first nested focusable element.
</p>

<p>
  Indicates that the dialog is active and can be interacted with. When the open attribute is not set, the dialog shouldn't be shown to the user. It is recommended to use the .show() or .showModal() methods to render dialogs, rather than the open attribute. If a dialog is opened using the open attribute, it will be non-modal.
  The native HTML dialog element should be used in creating modal dialogs as it provides usability and accessibility features that must be replicated if using other elements for a similar purpose. Use the appropriate .showModal() or .show() method to render dialogs. If creating a custom dialog implementation, ensure all expected default behaviors are supported and proper labeling recommendations are followed.
  When implementing a dialog, it is important to consider the most appropriate place to set user focus. Explicitly indicating the initial focus placement by use of the autofocus attribute will help ensure initial focus is set to the element deemed the best initial focus placement for any particular dialog. When in doubt, as it may not always be known where initial focus could be set within a dialog, particularly for instances where a dialog's content is dynamically rendered when invoked, then if necessary authors may decide focusing the dialog element itself would provide the best initial focus placement. When using HTMLDialogElement.showModal() to open a dialog, focus is set on the first nested focusable element.
</p>

<p>
  Indicates that the dialog is active and can be interacted with. When the open attribute is not set, the dialog shouldn't be shown to the user. It is recommended to use the .show() or .showModal() methods to render dialogs, rather than the open attribute. If a dialog is opened using the open attribute, it will be non-modal.
  The native HTML dialog element should be used in creating modal dialogs as it provides usability and accessibility features that must be replicated if using other elements for a similar purpose. Use the appropriate .showModal() or .show() method to render dialogs. If creating a custom dialog implementation, ensure all expected default behaviors are supported and proper labeling recommendations are followed.
  When implementing a dialog, it is important to consider the most appropriate place to set user focus. Explicitly indicating the initial focus placement by use of the autofocus attribute will help ensure initial focus is set to the element deemed the best initial focus placement for any particular dialog. When in doubt, as it may not always be known where initial focus could be set within a dialog, particularly for instances where a dialog's content is dynamically rendered when invoked, then if necessary authors may decide focusing the dialog element itself would provide the best initial focus placement. When using HTMLDialogElement.showModal() to open a dialog, focus is set on the first nested focusable element.
</p>

<p>
  Indicates that the dialog is active and can be interacted with. When the open attribute is not set, the dialog shouldn't be shown to the user. It is recommended to use the .show() or .showModal() methods to render dialogs, rather than the open attribute. If a dialog is opened using the open attribute, it will be non-modal.
  The native HTML dialog element should be used in creating modal dialogs as it provides usability and accessibility features that must be replicated if using other elements for a similar purpose. Use the appropriate .showModal() or .show() method to render dialogs. If creating a custom dialog implementation, ensure all expected default behaviors are supported and proper labeling recommendations are followed.
  When implementing a dialog, it is important to consider the most appropriate place to set user focus. Explicitly indicating the initial focus placement by use of the autofocus attribute will help ensure initial focus is set to the element deemed the best initial focus placement for any particular dialog. When in doubt, as it may not always be known where initial focus could be set within a dialog, particularly for instances where a dialog's content is dynamically rendered when invoked, then if necessary authors may decide focusing the dialog element itself would provide the best initial focus placement. When using HTMLDialogElement.showModal() to open a dialog, focus is set on the first nested focusable element.
</p>

<p>
  Indicates that the dialog is active and can be interacted with. When the open attribute is not set, the dialog shouldn't be shown to the user. It is recommended to use the .show() or .showModal() methods to render dialogs, rather than the open attribute. If a dialog is opened using the open attribute, it will be non-modal.
  The native HTML dialog element should be used in creating modal dialogs as it provides usability and accessibility features that must be replicated if using other elements for a similar purpose. Use the appropriate .showModal() or .show() method to render dialogs. If creating a custom dialog implementation, ensure all expected default behaviors are supported and proper labeling recommendations are followed.
  When implementing a dialog, it is important to consider the most appropriate place to set user focus. Explicitly indicating the initial focus placement by use of the autofocus attribute will help ensure initial focus is set to the element deemed the best initial focus placement for any particular dialog. When in doubt, as it may not always be known where initial focus could be set within a dialog, particularly for instances where a dialog's content is dynamically rendered when invoked, then if necessary authors may decide focusing the dialog element itself would provide the best initial focus placement. When using HTMLDialogElement.showModal() to open a dialog, focus is set on the first nested focusable element.
</p>

<%= render(Impulse::DialogComponent.new(id: "dialog-1", title: "Edit profile")) do |c| %>
  <% c.with_body do %>
    <button type="button" data-dialog-trigger-for="dialog-2" class="btn btn-primary">Open nested dialog</button>
    <%= render(Impulse::DialogComponent.new(id: "dialog-2", title: "Nested dialog", size: :sm)) do |n| %>
      <% n.with_body { "Nested dialog..." } %>
    <% end %>
  <% end %>
<% end %>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const buttons = Array.from(document.querySelectorAll('button[data-dialog-trigger-for]'));
    buttons.forEach((b) => b.addEventListener('click', openDialog));
  });

  function openDialog(event) {
    event.preventDefault();
    const dialogId = event.target.getAttribute('data-dialog-trigger-for');
    const dialog = document.getElementById(dialogId);
    if (dialog) {
      dialog.show();
    }
  }
</script>
